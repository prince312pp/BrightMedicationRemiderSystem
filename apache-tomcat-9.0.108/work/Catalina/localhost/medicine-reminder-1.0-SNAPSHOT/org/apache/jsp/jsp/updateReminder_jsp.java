/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-08-28 16:56:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.example.model.MedicineReminder;

public final class updateReminder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.example.model.MedicineReminder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Update Reminder - Bright Medication Reminder System</title>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/styles.css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"container\">\n");
      out.write("    <div class=\"header\">\n");
      out.write("        <div class=\"brand\">Bright Medication Reminder System</div>\n");
      out.write("        <div class=\"nav\">\n");
      out.write("            <a href=\"view-reminders\">View Reminders</a>\n");
      out.write("            <a href=\"add-reminder\">Add Reminder</a>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"card\">\n");
      out.write("        <h2>Update Reminder</h2>\n");
      out.write("        ");

            MedicineReminder reminder = (MedicineReminder) request.getAttribute("reminder");
            if (reminder != null) {
                String days = reminder.getDaysOfWeek() == null ? "" : reminder.getDaysOfWeek();
        
      out.write("\n");
      out.write("        <form method=\"post\" action=\"update-reminder\">\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( reminder.getId() );
      out.write("\" />\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\" for=\"medicineName\">Medication Name</label>\n");
      out.write("                <input class=\"input\" type=\"text\" name=\"medicineName\" value=\"");
      out.print( reminder.getMedicineName() );
      out.write("\" required />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\" for=\"dosage\">Dosage</label>\n");
      out.write("                <input class=\"input\" type=\"text\" name=\"dosage\" value=\"");
      out.print( reminder.getDosage() );
      out.write("\" required />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\" for=\"reminderTime\">Reminder Time</label>\n");
      out.write("                <input class=\"input\" type=\"datetime-local\" name=\"reminderTime\" value=\"");
      out.print( reminder.getReminderTime().toString().substring(0,16) );
      out.write("\" required />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\" for=\"frequency\">Frequency</label>\n");
      out.write("                <select class=\"select\" name=\"frequency\" id=\"frequency\" onchange=\"toggleDays()\">\n");
      out.write("                    <option value=\"EVERYDAY\" ");
      out.print( "EVERYDAY".equals(reminder.getFrequency()) ? "selected" : "" );
      out.write(">Every day</option>\n");
      out.write("                    <option value=\"WEEKLY\" ");
      out.print( "WEEKLY".equals(reminder.getFrequency()) ? "selected" : "" );
      out.write(">Specific days of week</option>\n");
      out.write("                </select>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\" id=\"daysRow\" style=\"display:");
      out.print( "WEEKLY".equals(reminder.getFrequency()) ? "block" : "none" );
      out.write(";\">\n");
      out.write("                <label class=\"label\">Days of Week</label>\n");
      out.write("                <div>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"MON\" ");
      out.print( days.contains("MON")?"checked":"" );
      out.write(" /> Mon</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"TUE\" ");
      out.print( days.contains("TUE")?"checked":"" );
      out.write(" /> Tue</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"WED\" ");
      out.print( days.contains("WED")?"checked":"" );
      out.write(" /> Wed</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"THU\" ");
      out.print( days.contains("THU")?"checked":"" );
      out.write(" /> Thu</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"FRI\" ");
      out.print( days.contains("FRI")?"checked":"" );
      out.write(" /> Fri</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"SAT\" ");
      out.print( days.contains("SAT")?"checked":"" );
      out.write(" /> Sat</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"SUN\" ");
      out.print( days.contains("SUN")?"checked":"" );
      out.write(" /> Sun</label>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\" for=\"notes\">Notes</label>\n");
      out.write("                <input class=\"input\" type=\"text\" name=\"notes\" value=\"");
      out.print( reminder.getNotes() );
      out.write("\" />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <label class=\"label\"><input type=\"checkbox\" name=\"taken\" disabled ");
      out.print( reminder.isTaken()?"checked":"" );
      out.write(" /> Mark as taken (use actions on list)</label>\n");
      out.write("            </div>\n");
      out.write("            <button class=\"btn btn-primary\" type=\"submit\">Update Reminder</button>\n");
      out.write("        </form>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("        <div class=\"card\">Reminder not found.</div>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"footer\">Built with Servlets, Hibernate, MySQL</div>\n");
      out.write("</div>\n");
      out.write("<script>\n");
      out.write("function toggleDays(){\n");
      out.write("    var sel = document.getElementById('frequency');\n");
      out.write("    document.getElementById('daysRow').style.display = sel.value === 'WEEKLY' ? 'block' : 'none';\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
